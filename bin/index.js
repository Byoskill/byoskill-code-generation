#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var yargs_1 = __importDefault(require("yargs"));
var code_generation_1 = __importDefault(require("./code-generation"));
var args = yargs_1.default.options({
    'catalog': { type: 'string', demandOption: true, alias: 'c' },
    'project': { type: 'string', demandOption: true, alias: 'p' },
    'output': { type: 'string', demandOption: true, alias: 'o' },
})
    .help('h')
    .describe('catalog', 'Data generated by spring-crud-generator')
    .describe('output', 'the output path where the code will be generated')
    .describe('project', 'the project containing your code generation scripts.')
    .command('codegenerator [catalog] [project] [output]', 'Generates code using a catalog and a generation project into an output folder.')
    .alias('h', 'help').argv;
console.log(args);
new code_generation_1.default(args.argv).generate();
